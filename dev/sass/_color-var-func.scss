// Core Colors
$gray: #a1abb3;
$black: #242E35;
$body: #4f565c;
$blue: #2693D5;
$bluemoon: #BFDEEC;
$moon: #f0f5f7;
$white: #FFFFFF;

// Core Secondary Colors
$green: #21BA6E;
$red: #E23C3F;
$yellow: #FED049;
$orange: #FD7F3B;

// Core Tertiary Colors
$purple: #7049A3;
$teal: #41B7CC;
$pink: #D96EAE;
$salmon: #E16070;
$mustard: #EFC663;

// Core Grayscale Colors
$rhino: #4B555B;
$rabbit: #737C81;
$rat: #a1abb3;
$mouse: #dae1e3;
$mite: #f7f9fa;

// Variables
$font-family: "proxima-nova", Proxima Nova, "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif;
$rem-base: 16px;

// Functions
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function rem($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}